// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Posig.Blog.Data;

#nullable disable

namespace Posig.Blog.Data.Migrations
{
    [DbContext(typeof(PosigBlogContext))]
    partial class PosigBlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Posig.Blog.Shared.Entities.BlogPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("BlogPosts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d066420-c24e-4475-878b-37c590b5c9c9"),
                            Author = "Author 1",
                            Content = "Content for blog post 1",
                            CreatedAt = new DateTime(2024, 7, 24, 10, 46, 1, 308, DateTimeKind.Local).AddTicks(5822),
                            Title = "Blog Post 1",
                            UpdatedAt = new DateTime(2024, 7, 24, 10, 46, 1, 308, DateTimeKind.Local).AddTicks(5834)
                        },
                        new
                        {
                            Id = new Guid("48158052-7ae1-4c1f-bfc9-5c5ab2d808fb"),
                            Author = "Author 2",
                            Content = "Content for blog post 2",
                            CreatedAt = new DateTime(2024, 7, 24, 10, 46, 1, 308, DateTimeKind.Local).AddTicks(5841),
                            Title = "Blog Post 2",
                            UpdatedAt = new DateTime(2024, 7, 24, 10, 46, 1, 308, DateTimeKind.Local).AddTicks(5842)
                        });
                });

            modelBuilder.Entity("Posig.Blog.Shared.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BlogPostId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BlogPostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a0064eaa-8c20-4234-a1ee-ad84a8debbcd"),
                            Author = "Commenter 1",
                            BlogPostId = new Guid("0d066420-c24e-4475-878b-37c590b5c9c9"),
                            CommentText = "This is a comment",
                            CreatedAt = new DateTime(2024, 7, 24, 10, 46, 1, 308, DateTimeKind.Local).AddTicks(5884),
                            UpdatedAt = new DateTime(2024, 7, 24, 10, 46, 1, 308, DateTimeKind.Local).AddTicks(5885)
                        },
                        new
                        {
                            Id = new Guid("b15d0946-9db5-449a-a860-5dd31c91bc41"),
                            Author = "Commenter 2",
                            BlogPostId = new Guid("0d066420-c24e-4475-878b-37c590b5c9c9"),
                            CommentText = "This is another comment",
                            CreatedAt = new DateTime(2024, 7, 24, 10, 46, 1, 308, DateTimeKind.Local).AddTicks(5888),
                            UpdatedAt = new DateTime(2024, 7, 24, 10, 46, 1, 308, DateTimeKind.Local).AddTicks(5889)
                        },
                        new
                        {
                            Id = new Guid("5ad48bdb-8f22-47ce-bf09-851516cfdc54"),
                            Author = "Commenter 3",
                            BlogPostId = new Guid("48158052-7ae1-4c1f-bfc9-5c5ab2d808fb"),
                            CommentText = "This is a comment on post 2",
                            CreatedAt = new DateTime(2024, 7, 24, 10, 46, 1, 308, DateTimeKind.Local).AddTicks(5892),
                            UpdatedAt = new DateTime(2024, 7, 24, 10, 46, 1, 308, DateTimeKind.Local).AddTicks(5892)
                        });
                });

            modelBuilder.Entity("Posig.Blog.Shared.Entities.Comment", b =>
                {
                    b.HasOne("Posig.Blog.Shared.Entities.BlogPost", null)
                        .WithMany("Comments")
                        .HasForeignKey("BlogPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Posig.Blog.Shared.Entities.BlogPost", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
